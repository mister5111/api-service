name: Deploy

on: 
  workflow_dispatch:


env:
  IP_instances: ""

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone
        uses: actions/checkout@v1

      # - name: Set Config for Nginx
      #   run: |
      #       sed -i "s/{{WORD}}/${{ vars.USER_NAME }}/g" index.html

      - name: Create ZIP
        run: |
            tar --exclude='.git' --exclude='.vscode' -cvf api-service.tar .
          
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # - name: Create instances
      #   run: |
      #       gcloud -v
      #       gcloud projects list
      #       gcloud compute instances create kodi-deploy --machine-type=g1-small --tags http-server,https-server --zone=europe-central2-a
      #       Ip_Kodi_Deploy=$(gcloud compute instances list --filter="name=kodi-deploy" --format="value(networkInterfaces[0].accessConfigs[0].natIP)")
      #       echo $Ip_Kodi_Deploy
      #       echo "IP_instances=$Ip_Kodi_Deploy" >> $GITHUB_ENV

      # - name: Update repository variable
      #   run: |
      #     REPO="mister5111/Gcloud-VM"
      #     VAR_NAME="IP_INSTANCES"
      #     NEW_VALUE="$IP_instances"

      #     curl -s -X PATCH "https://api.github.com/repos/$REPO/actions/variables/$VAR_NAME" \
      #     -H "Accept: application/vnd.github+json" \
      #     -H "Authorization: token ${{ secrets.TOKEN }}" \
      #     -H "X-GitHub-Api-Version: 2022-11-28" \
      #     -d "{\"value\":\"$NEW_VALUE\"}"

      # # - name: Print repository variable
      # #   run: echo "MY_VARIABLE is ${{ vars.USER_NAME }}"

      # - name: Set up SSH key
      #   run: |
      #     mkdir -p ~/.ssh
      #     echo "${{ secrets.SSH_KEY_PRIVATE }}" > ~/.ssh/deploy
      #     chmod 600 ~/.ssh/deploy
          
        
      # - name: Wait server sleep 20sec
      #   run: |
      #     echo "$IP_instances"
      #     sleep 20


      # - name: Copy project
      #   run: |
      #     scp -i ~/.ssh/deploy -o 'StrictHostKeyChecking no' hello.tar ${{ secrets.SSH_USER }}@$IP_instances:/home/deploy/
    

      # - name: Settings server
      #   run: |
      #     ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/deploy ${{ secrets.SSH_USER }}@$IP_instances <<'ENDSSH'
      #     sudo -s
      #     apt update -y && apt install nginx -y
      #     rm -r /var/www/html/*
      #     tar -xvf hello.tar -C /var/www/html/ --overwrite
      #     systemctl restart nginx
      #     ENDSSH


