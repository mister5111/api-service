name: Deploy

on: 
  workflow_dispatch:


env:
  IP_instances: ""

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone
        uses: actions/checkout@v1

      - name: Create ZIP
        run: |
            tar --exclude='.git' --exclude='.vscode' -cvf api-service.tar .
          
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Create instances
        run: |
            gcloud -v
            gcloud projects list
            gcloud compute instances create kodi-deploy-docker --machine-type=g1-small --tags http-server,https-server --zone=europe-central2-a
            IP_kodi_deploy_docker=$(gcloud compute instances list --filter="name=kodi-deploy-docker" --format="value(networkInterfaces[0].accessConfigs[0].natIP)")
            echo $IP_kodi-deploy-docker
            echo "IP_instances=$IP_kodi_deploy_docker" >> $GITHUB_ENV

      - name: Update repository variable
        run: |
          REPO="mister5111/api-service"
          VAR_NAME="IP_INSTANCES"
          NEW_VALUE="$IP_instances"

          curl -s -X PATCH "https://api.github.com/repos/$REPO/actions/variables/$VAR_NAME" \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -d "{\"value\":\"$NEW_VALUE\"}"

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE }}" > ~/.ssh/deploy
          chmod 600 ~/.ssh/deploy
          ls -la ~/.ssh/deploy
          
        
      - name: Wait server sleep 20sec
        run: |
          echo "$IP_instances"
          sleep 20


      - name: Copy project
        run: |
          echo "$IP_instances"
          scp -i ~/.ssh/deploy -o 'StrictHostKeyChecking no' api-service.tar ${{ secrets.SSH_USER }}@$IP_instances:/home/deploy/
    

      - name: Settings server
        run: |
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/deploy ${{ secrets.SSH_USER }}@$IP_instances <<'ENDSSH'
          sudo -s
          apt update -y && apt upgrade -y
          apt-get update
          apt-get install ca-certificates curl
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
          chmod a+r /etc/apt/keyrings/docker.asc

          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            tee /etc/apt/sources.list.d/docker.list > /dev/null
            apt-get update
          apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
          docker run hello-world
          tar -xvf api-service.tar -C /var/www/ --overwrite
          apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          ENDSSH


